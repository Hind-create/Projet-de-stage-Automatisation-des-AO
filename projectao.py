# -*- coding: utf-8 -*-
"""PROJECTAO

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I3EaqwXD_AVktSCBfX5ao40mUx5TXXfO
"""

from google.colab import files

# üìå Ouvre une fen√™tre pour s√©lectionner un fichier √† t√©l√©verser
uploaded = files.upload()

# üìå Affiche les fichiers t√©l√©vers√©s
for filename in uploaded.keys():
    print(f"‚úÖ Fichier t√©l√©vers√© : {filename}")

# Installation des d√©pendances (√† ex√©cuter une seule fois)
!pip install transformers datasets evaluate --quiet
!pip install --upgrade pandas openpyxl --quiet

import pandas as pd
import numpy as np
import torch
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from datasets import Dataset
from transformers import AutoTokenizer, AutoModelForSequenceClassification
from transformers import DataCollatorWithPadding, TrainingArguments, Trainer
import evaluate
from torch.nn.functional import softmax

# Param√®tres
data_path = "munisys_cleaned.xlsx"
test_file_path = "resultats_classification_ao5.xlsx"
text_column_name = "Objet"
label_column_name = "BU"
model_name = "camembert-base"
test_size = 0.2
num_labels = 5
confidence_threshold = 0.50

# Chargement et pr√©paration des donn√©es
df = pd.read_excel(data_path)
df = df[[text_column_name, label_column_name]].dropna()
df[label_column_name] = df[label_column_name].astype(str).str.strip().str.lower()

label2id = {
    "endpoint solutions": 0,
    "cybersecurity": 1,
    "infrastructure software": 2,
    "cloud and data center solutions": 3,
    "non pertinent": 4
}
id2label = {v: k for k, v in label2id.items()}

df = df[df[label_column_name].isin(label2id.keys())]
df["label"] = df[label_column_name].map(label2id)

df_train, df_test = train_test_split(df, test_size=test_size, stratify=df["label"], random_state=42)
train_dataset = Dataset.from_pandas(df_train)
test_dataset = Dataset.from_pandas(df_test)

# Tokenisation
tokenizer = AutoTokenizer.from_pretrained(model_name)

def tokenize_function(examples):
    tokens = tokenizer(
        examples[text_column_name],
        truncation=True,
        padding="max_length",
        max_length=128
    )
    tokens["labels"] = examples["label"]
    return tokens

tokenized_train = train_dataset.map(tokenize_function, batched=True)
tokenized_test = test_dataset.map(tokenize_function, batched=True)

# Mod√®le
model = AutoModelForSequenceClassification.from_pretrained(
    model_name,
    num_labels=num_labels,
    id2label=id2label,
    label2id=label2id
)

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)

# Entra√Ænement
data_collator = DataCollatorWithPadding(tokenizer=tokenizer)
metric = evaluate.load("accuracy")

def compute_metrics(eval_pred):
    logits, labels = eval_pred
    preds = np.argmax(logits, axis=-1)
    return metric.compute(predictions=preds, references=labels)

training_args = TrainingArguments(
    output_dir="./results_camembert",
    learning_rate=2e-5,
    per_device_train_batch_size=8,
    per_device_eval_batch_size=8,
    num_train_epochs=5,
    weight_decay=0.01,
    logging_strategy="epoch",
    save_strategy="epoch",
    report_to="none"
)

trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_train,
    eval_dataset=tokenized_test,
    tokenizer=tokenizer,
    data_collator=data_collator,
    compute_metrics=compute_metrics
)

trainer.train()

# √âvaluation
pred_output = trainer.predict(tokenized_test)
logits = pred_output.predictions
preds = np.argmax(logits, axis=1)
labels = pred_output.label_ids

print("\n Rapport de classification sur le jeu test :")
target_names = [id2label[i] for i in range(num_labels)]
print(classification_report(labels, preds, labels=list(range(num_labels)), target_names=target_names))


# Partie classification + commerciaux
df_to_classify = pd.read_excel(test_file_path)

if text_column_name not in df_to_classify.columns or "Organisme" not in df_to_classify.columns:
    raise ValueError(f"Les colonnes 'Objet' ou 'Organisme' sont manquantes dans le fichier {test_file_path}")

texts_to_classify = df_to_classify[text_column_name].dropna().astype(str).tolist()
organismes = df_to_classify["Organisme"].astype(str).tolist()


organisme_to_commercial = {
    # Minist√®res et administrations centrales
    "minist√®re de la sant√©": "Youssef El Fassi",
    "minist√®re de l'int√©rieur": "Sara Benali",
    "minist√®re de la justice": "Karima El Ayachi",
    "minist√®re des finances": "Rachid Hakam",
    "minist√®re de l'√©ducation": "Yassir Bennis",
    "minist√®re de l'agriculture": "Meryem Hajji",
    "minist√®re du tourisme": "Naoufal Khattabi",
    "minist√®re de l'√©quipement": "Khadija Skalli",
    "minist√®re de la culture": "Nadia Chraibi",
    "minist√®re de l'industrie": "Mehdi Rahmouni",
    "minist√®re de la transition √©nerg√©tique": "Asmae Belkadi",
    "minist√®re des habous": "Nadia Chraibi",
    "minist√®re de la jeunesse": "Wafae Bennis",
    "minist√®re des affaires √©trang√®res": "Maha El Mernissi",

    # Secteur bancaire et financier
    "banque populaire": "Omar Bouzid",
    "bmce": "Imane Lahlou",
    "attijariwafa": "Hicham Dali",
    "caisse de d√©p√¥t": "Hind Aouad",
    "barid al maghrib": "Brahim Joulali",
    "bank al maghrib": "Mouna Kadiri",
    "al barid bank": "Brahim Joulali",

    # T√©l√©communications
    "maroc telecom": "Othmane Filali",
    "inwi": "Soukaina Hamidi",
    "orange": "Reda Lakrimi",

    # Sant√© et protection sociale
    "cnops": "Younes Aklil",
    "cnss": "Kenza El Yazidi",
    "hopital": "Leila El Mansouri",
    "centre hospitalier": "Mounir Idrissi",
    "chp": "Mounir Idrissi",
    "chr": "Mounir Idrissi",
    "chu": "Leila El Mansouri",
    "ino": "Leila El Mansouri",
    "institut pasteur": "Leila El Mansouri",

    # √âducation et recherche
    "universit√©": "Nadia Tazi",
    "ensa": "Youssef Boughanmi",
    "est": "Hind Aouad",
    "√©cole": "Salma Daoudi",
    "facult√©": "Nadia Tazi",
    "aref": "Ali Fadili",
    "acad√©mie": "Ali Fadili",
    "ofppt": "Nadia Tazi",

    # Collectivit√©s territoriales
    "direction r√©gionale": "Ayoub Kabbaj",
    "province": "Hamza Boulahfa",
    "pr√©fecture": "Sanaa El Alaoui",
    "r√©gion": "Ali Fadili",
    "commune": "Lamiaa Azouzi",
    "wilaya": "Sanaa El Alaoui",
    "pachalik": "Hamza Boulahfa",
    "ca√Ødat": "Hamza Boulahfa",

    # Entreprises publiques
    "onee": "Samir Taleb",
    "oncf": "Rachid Sbai",
    "onda": "Mehdi Rahmouni",
    "anp": "Mehdi Rahmouni",
    "marsa maroc": "Mehdi Rahmouni",
    "tanger med": "Mehdi Rahmouni",
    "ormva": "Ayoub Kabbaj",
    "onssa": "Najib Lahlou",
    "ompic": "Nabil Khattabi",
    "ancfcc": "Soufiane Rahali",
    "radeef": "Imane Bakkali",
    "radem": "Younes Mzali",

    # S√©curit√© et d√©fense
    "dgssi": "Karim Nassiri",
    "dgsn": "Hassan Souhail",
    "gendarmerie": "Sa√Ød Kabbouri",
    "s√©curit√©": "Yasmine Maachou",
    "protection civile": "Soufiane Rahali",
    "forces auxiliaires": "Wafae Bennis",
    "arm√©e": "Soufiane Rahali",
    "far": "Soufiane Rahali",

    # Justice
    "tribunal": "Karima El Ayachi",
    "cour": "Azzeddine El Ghali",
    "circonscription judiciaire": "Azzeddine El Ghali",

    # Autres organismes
    "fondation": "Hajar Mouline",
    "rak": "Amine El Idrissi",
    "agence nationale du soutien sociale": "Samira Maouni",
    "agence marocaine du m√©dicament": "Nabil Khattabi",
    "haut commissariat": "Abdelhak Chami",
    "cndh": "Maha El Mernissi",
    "cgem": "Mohamed Oubihi",
    "inspection": "Wafae Bennis",
    "audit": "Tarik Ghoulam",
    "douane": "Aziz Jebari",
    "poste": "Brahim Joulali",
    "tgr": "Hicham Badaoui",
    "agence urbaine": "Omar Kharbouch",
    "mutuelle": "Kenza El Yazidi",
    "cmr": "Kenza El Yazidi",
    "cdg": "Hind Aouad",
    "al omrane": "Khadija Skalli",
    "sorec": "Azzeddine El Ghali",
    "inrh": "Nadia Tazi",
    "insea": "Abdelhak Chami",

    # Nouveaux ajouts pour couvrir plus de cas
    "laboratoire": "Leila El Mansouri",
    "centre de sant√©": "Leila El Mansouri",
    "polyclinique": "Leila El Mansouri",
    "direction provinciale": "Hamza Boulahfa",
    "d√©l√©gation": "Hamza Boulahfa",
    "agence": "Omar Kharbouch",
    "office": "Najib Lahlou",
    "√©tablissement": "Nadia Tazi",
    "institut": "Nadia Tazi",
    "√©cole nationale": "Salma Daoudi",
    "lyc√©e": "Ali Fadili",
    "coll√®ge": "Ali Fadili",
    "acad√©mie r√©gionale": "Ali Fadili",
    "direction g√©n√©rale": "Ayoub Kabbaj",
    "service": "Ayoub Kabbaj",
    "division": "Ayoub Kabbaj",
    "secteur": "Ayoub Kabbaj",
    "unit√©": "Ayoub Kabbaj",
    "projet": "Mehdi Rahmouni",
    "syst√®me d'information": "Hind Aouad",
    "solution informatique": "Hind Aouad",
    "plateforme": "Hind Aouad",
    "r√©seau": "Amine El Idrissi",
    "t√©l√©communication": "Othmane Filali",
    "technologie": "Othmane Filali",
    "digital": "Othmane Filali",
    "donn√©es": "Abdelhak Chami",
    "statistique": "Abdelhak Chami",
    "plan": "Abdelhak Chami",
    "d√©veloppement": "Mehdi Rahmouni",
    "investissement": "Mehdi Rahmouni",
    "port": "Mehdi Rahmouni",
    "a√©roport": "Mehdi Rahmouni",
    "transport": "Rachid Sbai",
    "infrastructure": "Khadija Skalli",
    "b√¢timent": "Khadija Skalli",
    "construction": "Khadija Skalli",
    "√©nergie": "Samir Taleb",
    "√©lectricit√©": "Samir Taleb",
    "eau": "Samir Taleb",
    "environnement": "Maha El Mernissi",
    "d√©veloppement durable": "Maha El Mernissi",
    "agriculture": "Meryem Hajji",
    "p√™che": "Meryem Hajji",
    "for√™t": "Meryem Hajji",
    "s√©curit√©": "Yasmine Maachou",
    "s√ªret√©": "Yasmine Maachou",
    "protection": "Yasmine Maachou",
    "sant√©": "Leila El Mansouri",
    "m√©dical": "Leila El Mansouri",
    "h√¥pital": "Leila El Mansouri",
    "clinique": "Leila El Mansouri",
    "radiologie": "Leila El Mansouri",
    "laboratoire": "Leila El Mansouri",
    "√©ducation": "Ali Fadili",
    "formation": "Ali Fadili",
    "enseignement": "Ali Fadili",
    "recherche": "Nadia Tazi",
    "science": "Nadia Tazi",
    "innovation": "Nadia Tazi",
    "culture": "Nadia Chraibi",
    "art": "Nadia Chraibi",
    "patrimoine": "Nadia Chraibi",
    "communication": "Nadia Chraibi",
    "m√©dia": "Nadia Chraibi",
    "presse": "Nadia Chraibi",
    "finance": "Rachid Hakam",
    "√©conomie": "Rachid Hakam",
    "budget": "Rachid Hakam",
    "fiscalit√©": "Rachid Hakam",
    "douane": "Aziz Jebari",
    "imp√¥t": "Rachid Hakam",
    "banque": "Omar Bouzid",
    "assurance": "Omar Bouzid",
    "cr√©dit": "Omar Bouzid",
    "justice": "Karima El Ayachi",
    "tribunal": "Karima El Ayachi",
    "cour": "Azzeddine El Ghali",
    "juridique": "Karima El Ayachi",
    "droit": "Karima El Ayachi",
    "s√©curit√© sociale": "Kenza El Yazidi",
    "retraite": "Kenza El Yazidi",
    "pr√©voyance": "Kenza El Yazidi",
    "social": "Samira Maouni",
    "solidarit√©": "Samira Maouni",
    "famille": "Samira Maouni",
    "femme": "Samira Maouni",
    "jeunesse": "Wafae Bennis",
    "sport": "Wafae Bennis",
    "loisir": "Wafae Bennis",
    "tourisme": "Naoufal Khattabi",
    "h√¥tellerie": "Naoufal Khattabi",
    "restauration": "Naoufal Khattabi",
    "industrie": "Mehdi Rahmouni",
    "production": "Mehdi Rahmouni",
    "manufacture": "Mehdi Rahmouni",
    "commerce": "Nabil Khattabi",
    "vente": "Nabil Khattabi",
    "marketing": "Nabil Khattabi",
    "service": "Ayoub Kabbaj",
    "administration": "Ayoub Kabbaj",
    "public": "Ayoub Kabbaj",
    "gouvernement": "Ayoub Kabbaj",
    "√©tat": "Ayoub Kabbaj",
    "collectivit√©": "Ali Fadili",
    "territoire": "Ali Fadili",
    "local": "Ali Fadili",
    "r√©gional": "Ali Fadili",
    "urbain": "Lamiaa Azouzi",
    "ville": "Lamiaa Azouzi",
    "municipal": "Lamiaa Azouzi",
    "communal": "Lamiaa Azouzi",
    "rural": "Hamza Boulahfa",
    "campagne": "Hamza Boulahfa",
    "agricole": "Meryem Hajji",
    "ferme": "Meryem Hajji",
    "√©levage": "Meryem Hajji",
    "p√™che": "Meryem Hajji",
    "aquaculture": "Meryem Hajji",
    "for√™t": "Meryem Hajji",
    "nature": "Meryem Hajji",
    "environnement": "Maha El Mernissi",
    "√©cologie": "Maha El Mernissi",
    "climat": "Maha El Mernissi",
    "d√©veloppement durable": "Maha El Mernissi",
    "√©nergie": "Samir Taleb",
    "√©lectricit√©": "Samir Taleb",
    "renouvelable": "Samir Taleb",
    "p√©trole": "Samir Taleb",
    "gaz": "Samir Taleb",
    "mine": "Samir Taleb",
    "ressource": "Samir Taleb",
    "eau": "Samir Taleb",
    "hydraulique": "Samir Taleb",
    "assainissement": "Samir Taleb",
    "distribution": "Samir Taleb",
    "traitement": "Samir Taleb",
    "transport": "Rachid Sbai",
    "logistique": "Rachid Sbai",
    "mobilit√©": "Rachid Sbai",
    "infrastructure": "Khadija Skalli",
    "construction": "Khadija Skalli",
    "b√¢timent": "Khadija Skalli",
    "travaux": "Khadija Skalli",
    "ing√©nierie": "Khadija Skalli",
    "architecture": "Khadija Skalli",
    "urbanisme": "Khadija Skalli",
    "am√©nagement": "Khadija Skalli",
    "technologie": "Othmane Filali",
    "digital": "Othmane Filali",
    "informatique": "Hind Aouad",
    "syst√®me d'information": "Hind Aouad",
    "logiciel": "Hind Aouad",
    "donn√©e": "Abdelhak Chami",
    "statistique": "Abdelhak Chami",
    "analyse": "Abdelhak Chami",
    "recherche": "Nadia Tazi",
    "science": "Nadia Tazi",
    "innovation": "Nadia Tazi",
    "d√©veloppement": "Mehdi Rahmouni",
    "projet": "Mehdi Rahmouni",
    "investissement": "Mehdi Rahmouni",
    "financement": "Mehdi Rahmouni",
    "partenariat": "Mehdi Rahmouni",
    "coop√©ration": "Mehdi Rahmouni",
    "international": "Maha El Mernissi",
    "relation": "Maha El Mernissi",
    "diplomatie": "Maha El Mernissi",
    "commerce international": "Maha El Mernissi",
    "export": "Maha El Mernissi",
    "import": "Maha El Mernissi",
    "douane": "Aziz Jebari",
    "fiscalit√©": "Rachid Hakam",
    "imp√¥t": "Rachid Hakam",
    "taxe": "Rachid Hakam",
    "comptabilit√©": "Rachid Hakam",
    "audit": "Tarik Ghoulam",
    "contr√¥le": "Tarik Ghoulam",
    "inspection": "Wafae Bennis",
    "√©valuation": "Wafae Bennis",
    "qualit√©": "Wafae Bennis",
    "certification": "Wafae Bennis",
    "norme": "Wafae Bennis",
    "s√©curit√©": "Yasmine Maachou",
    "s√ªret√©": "Yasmine Maachou",
    "protection": "Yasmine Maachou",
    "d√©fense": "Soufiane Rahali",
    "arm√©e": "Soufiane Rahali",
    "militaire": "Soufiane Rahali",
    "gendarmerie": "Sa√Ød Kabbouri",
    "police": "Yasmine Maachou",
    "s√©curit√© civile": "Yasmine Maachou",
    "protection civile": "Yasmine Maachou",
    "urgence": "Yasmine Maachou",
    "sant√©": "Leila El Mansouri",
    "m√©dical": "Leila El Mansouri",
    "h√¥pital": "Leila El Mansouri",
    "clinique": "Leila El Mansouri",
    "pharmacie": "Nabil Khattabi",
    "m√©dicament": "Nabil Khattabi",
    "laboratoire": "Leila El Mansouri",
    "analyse": "Leila El Mansouri",
    "diagnostic": "Leila El Mansouri",
    "radiologie": "Leila El Mansouri",
    "imagerie": "Leila El Mansouri",
    "chirurgie": "Leila El Mansouri",
    "m√©decine": "Leila El Mansouri",
    "param√©dical": "Leila El Mansouri",
    "infirmier": "Leila El Mansouri",
    "√©ducation": "Ali Fadili",
    "formation": "Ali Fadili",
    "enseignement": "Ali Fadili",
    "√©cole": "Salma Daoudi",
    "universit√©": "Nadia Tazi",
    "recherche": "Nadia Tazi",
    "science": "Nadia Tazi",
    "innovation": "Nadia Tazi",
    "culture": "Nadia Chraibi",
    "art": "Nadia Chraibi",
    "patrimoine": "Nadia Chraibi",
    "mus√©e": "Nadia Chraibi",
    "biblioth√®que": "Nadia Chraibi",
    "archive": "Nadia Chraibi",
    "monument": "Nadia Chraibi",
    "histoire": "Nadia Chraibi",
    "arch√©ologie": "Nadia Chraibi",
    "communication": "Nadia Chraibi",
    "m√©dia": "Nadia Chraibi",
    "presse": "Nadia Chraibi",
    "journal": "Nadia Chraibi",
    "radio": "Nadia Chraibi",
    "t√©l√©vision": "Nadia Chraibi",
    "cin√©ma": "Nadia Chraibi",
    "th√©√¢tre": "Nadia Chraibi",
    "spectacle": "Nadia Chraibi",
    "√©v√©nement": "Nadia Chraibi",
    "festival": "Nadia Chraibi",
    "sport": "Wafae Bennis",
    "loisir": "Wafae Bennis",
    "jeunesse": "Wafae Bennis",
    "association": "Wafae Bennis",
    "fondation": "Hajar Mouline",
    "ong": "Hajar Mouline",
    "humanitaire": "Hajar Mouline",
    "social": "Samira Maouni",
    "solidarit√©": "Samira Maouni",
    "famille": "Samira Maouni",
    "femme": "Samira Maouni",
    "enfant": "Samira Maouni",
    "personne √¢g√©e": "Samira Maouni",
    "handicap": "Samira Maouni",
    "insertion": "Samira Maouni",
    "d√©veloppement social": "Samira Maouni",
    "action sociale": "Samira Maouni",
    "aide": "Samira Maouni",
    "subvention": "Samira Maouni",
    "financement": "Mehdi Rahmouni",
    "investissement": "Mehdi Rahmouni",
    "projet": "Mehdi Rahmouni",
    "d√©veloppement": "Mehdi Rahmouni",
    "coop√©ration": "Mehdi Rahmouni",
    "partenariat": "Mehdi Rahmouni",
    "international": "Maha El Mernissi",
    "relation": "Maha El Mernissi",
    "diplomatie": "Maha El Mernissi",
    "commerce international": "Maha El Mernissi",
    "export": "Maha El Mernissi",
    "import": "Maha El Mernissi",
    "douane": "Aziz Jebari",
    "fiscalit√©": "Rachid Hakam",
    "imp√¥t": "Rachid Hakam",
    "taxe": "Rachid Hakam",
    "comptabilit√©": "Rachid Hakam",
    "audit": "Tarik Ghoulam",
    "contr√¥le": "Tarik Ghoulam",
    "inspection": "Wafae Bennis",
    "√©valuation": "Wafae Bennis",
    "qualit√©": "Wafae Bennis",
    "certification": "Wafae Bennis",
    "norme": "Wafae Bennis",
    "s√©curit√©": "Yasmine Maachou",
    "s√ªret√©": "Yasmine Maachou",
    "protection": "Yasmine Maachou",
    "d√©fense": "Soufiane Rahali",
    "arm√©e": "Soufiane Rahali",
    "militaire": "Soufiane Rahali",
    "gendarmerie": "Sa√Ød Kabbouri",
    "police": "Yasmine Maachou",
    "s√©curit√© civile": "Yasmine Maachou",
    "protection civile": "Yasmine Maachou",
    "urgence": "Yasmine Maachou",
    "sant√©": "Leila El Mansouri",
    "m√©dical": "Leila El Mansouri",
    "h√¥pital": "Leila El Mansouri",
    "clinique": "Leila El Mansouri",
    "pharmacie": "Nabil Khattabi",
    "m√©dicament": "Nabil Khattabi",
    "laboratoire": "Leila El Mansouri",
    "analyse": "Leila El Mansouri",
    "diagnostic": "Leila El Mansouri",
    "radiologie": "Leila El Mansouri",
    "imagerie": "Leila El Mansouri",
    "chirurgie": "Leila El Mansouri",
    "m√©decine": "Leila El Mansouri",
    "param√©dical": "Leila El Mansouri",
    "infirmier": "Leila El Mansouri",
    "√©ducation": "Ali Fadili",
    "formation": "Ali Fadili",
    "enseignement": "Ali Fadili",
    "√©cole": "Salma Daoudi",
    "universit√©": "Nadia Tazi",
    "recherche": "Nadia Tazi",
    "science": "Nadia Tazi",
    "innovation": "Nadia Tazi",
    "culture": "Nadia Chraibi",
    "art": "Nadia Chraibi",
    "patrimoine": "Nadia Chraibi",
    "mus√©e": "Nadia Chraibi",
    "biblioth√®que": "Nadia Chraibi",
    "archive": "Nadia Chraibi",
    "monument": "Nadia Chraibi",
    "histoire": "Nadia Chraibi",
    "arch√©ologie": "Nadia Chraibi",
    "communication": "Nadia Chraibi",
    "m√©dia": "Nadia Chraibi",
    "presse": "Nadia Chraibi",
    "journal": "Nadia Chraibi",
    "radio": "Nadia Chraibi",
    "t√©l√©vision": "Nadia Chraibi",
    "cin√©ma": "Nadia Chraibi",
    "th√©√¢tre": "Nadia Chraibi",
    "spectacle": "Nadia Chraibi",
    "√©v√©nement": "Nadia Chraibi",
    "festival": "Nadia Chraibi",
    "sport": "Wafae Bennis",
    "loisir": "Wafae Bennis",
    "jeunesse": "Wafae Bennis",
    "association": "Wafae Bennis",
    "fondation": "Hajar Mouline",
    "ong": "Hajar Mouline",
    "humanitaire": "Hajar Mouline",
    "social": "Samira Maouni",
    "solidarit√©": "Samira Maouni",
    "famille": "Samira Maouni",
    "femme": "Samira Maouni",
    "enfant": "Samira Maouni",
    "personne √¢g√©e": "Samira Maouni",
    "handicap": "Samira Maouni",
    "insertion": "Samira Maouni",
    "d√©veloppement social": "Samira Maouni",
    "action sociale": "Samira Maouni",
    "aide": "Samira Maouni",
    "subvention": "Samira Maouni"
}

# Fonction d'affectation am√©lior√©e
def map_commercial_from_organisme(organisme):
    org = organisme.lower()

    # V√©rification des correspondances exactes en premier
    for keyword, commercial in organisme_to_commercial.items():
        if keyword in org:
            return commercial

    # V√©rification des mots-cl√©s plus g√©n√©raux si aucune correspondance exacte
    words = org.split()
    for word in words:
        for keyword, commercial in organisme_to_commercial.items():
            if keyword.split()[0] == word:  # On v√©rifie seulement le premier mot du keyword
                return commercial

    # Si aucun mot-cl√© ne correspond, on essaie de trouver un commercial par domaine
    domain_keywords = {
        "sant√©": "Leila El Mansouri",
        "√©ducation": "Ali Fadili",
        "formation": "Ali Fadili",
        "universit√©": "Nadia Tazi",
        "√©cole": "Salma Daoudi",
        "h√¥pital": "Leila El Mansouri",
        "centre hospitalier": "Mounir Idrissi",
        "minist√®re": "Ayoub Kabbaj",
        "direction": "Ayoub Kabbaj",
        "province": "Hamza Boulahfa",
        "pr√©fecture": "Sanaa El Alaoui",
        "commune": "Lamiaa Azouzi",
        "r√©gion": "Ali Fadili",
        "agence": "Omar Kharbouch",
        "office": "Najib Lahlou",
        "institut": "Nadia Tazi",
        "laboratoire": "Leila El Mansouri",
        "projet": "Mehdi Rahmouni",
        "d√©veloppement": "Mehdi Rahmouni",
        "technologie": "Othmane Filali",
        "informatique": "Hind Aouad",
        "syst√®me": "Hind Aouad",
        "donn√©e": "Abdelhak Chami",
        "statistique": "Abdelhak Chami",
        "finance": "Rachid Hakam",
        "√©conomie": "Rachid Hakam",
        "banque": "Omar Bouzid",
        "assurance": "Omar Bouzid",
        "justice": "Karima El Ayachi",
        "tribunal": "Karima El Ayachi",
        "cour": "Azzeddine El Ghali",
        "s√©curit√©": "Yasmine Maachou",
        "protection": "Yasmine Maachou",
        "d√©fense": "Soufiane Rahali",
        "arm√©e": "Soufiane Rahali",
        "gendarmerie": "Sa√Ød Kabbouri",
        "police": "Yasmine Maachou",
        "culture": "Nadia Chraibi",
        "art": "Nadia Chraibi",
        "patrimoine": "Nadia Chraibi",
        "communication": "Nadia Chraibi",
        "m√©dia": "Nadia Chraibi",
        "presse": "Nadia Chraibi",
        "sport": "Wafae Bennis",
        "jeunesse": "Wafae Bennis",
        "social": "Samira Maouni",
        "solidarit√©": "Samira Maouni",
        "famille": "Samira Maouni",
        "femme": "Samira Maouni",
        "enfant": "Samira Maouni",
        "personne √¢g√©e": "Samira Maouni",
        "handicap": "Samira Maouni",
        "insertion": "Samira Maouni",
        "tourisme": "Naoufal Khattabi",
        "h√¥tellerie": "Naoufal Khattabi",
        "restauration": "Naoufal Khattabi",
        "industrie": "Mehdi Rahmouni",
        "production": "Mehdi Rahmouni",
        "manufacture": "Mehdi Rahmouni",
        "commerce": "Nabil Khattabi",
        "vente": "Nabil Khattabi",
        "marketing": "Nabil Khattabi",
        "service": "Ayoub Kabbaj",
        "administration": "Ayoub Kabbaj",
        "public": "Ayoub Kabbaj",
        "gouvernement": "Ayoub Kabbaj",
        "√©tat": "Ayoub Kabbaj",
        "collectivit√©": "Ali Fadili",
        "territoire": "Ali Fadili",
        "local": "Ali Fadili",
        "r√©gional": "Ali Fadili",
        "urbain": "Lamiaa Azouzi",
        "ville": "Lamiaa Azouzi",
        "municipal": "Lamiaa Azouzi",
        "communal": "Lamiaa Azouzi",
        "rural": "Hamza Boulahfa",
        "campagne": "Hamza Boulahfa",
        "agricole": "Meryem Hajji",
        "ferme": "Meryem Hajji",
        "√©levage": "Meryem Hajji",
        "p√™che": "Meryem Hajji",
        "aquaculture": "Meryem Hajji",
        "for√™t": "Meryem Hajji",
        "nature": "Meryem Hajji",
        "environnement": "Maha El Mernissi",
        "√©cologie": "Maha El Mernissi",
        "climat": "Maha El Mernissi",
        "d√©veloppement durable": "Maha El Mernissi",
        "√©nergie": "Samir Taleb",
        "√©lectricit√©": "Samir Taleb",
        "renouvelable": "Samir Taleb",
        "p√©trole": "Samir Taleb",
        "gaz": "Samir Taleb",
        "mine": "Samir Taleb",
        "ressource": "Samir Taleb",
        "eau": "Samir Taleb",
        "hydraulique": "Samir Taleb",
        "assainissement": "Samir Taleb",
        "distribution": "Samir Taleb",
        "traitement": "Samir Taleb",
        "transport": "Rachid Sbai",
        "logistique": "Rachid Sbai",
        "mobilit√©": "Rachid Sbai",
        "infrastructure": "Khadija Skalli",
        "construction": "Khadija Skalli",
        "b√¢timent": "Khadija Skalli",
        "travaux": "Khadija Skalli",
        "ing√©nierie": "Khadija Skalli",
        "architecture": "Khadija Skalli",
        "urbanisme": "Khadija Skalli",
        "am√©nagement": "Khadija Skalli",
        "technologie": "Othmane Filali",
        "digital": "Othmane Filali",
        "informatique": "Hind Aouad",
        "syst√®me d'information": "Hind Aouad",
        "logiciel": "Hind Aouad",
        "donn√©e": "Abdelhak Chami",
        "statistique": "Abdelhak Chami",
        "analyse": "Abdelhak Chami",
        "recherche": "Nadia Tazi",
        "science": "Nadia Tazi",
        "innovation": "Nadia Tazi",
        "d√©veloppement": "Mehdi Rahmouni",
        "projet": "Mehdi Rahmouni",
        "investissement": "Mehdi Rahmouni",
        "financement": "Mehdi Rahmouni",
        "partenariat": "Mehdi Rahmouni",
        "coop√©ration": "Mehdi Rahmouni",
        "international": "Maha El Mernissi",
        "relation": "Maha El Mernissi",
        "diplomatie": "Maha El Mernissi",
        "commerce international": "Maha El Mernissi",
        "export": "Maha El Mernissi",
        "import": "Maha El Mernissi",
        "douane": "Aziz Jebari",
        "fiscalit√©": "Rachid Hakam",
        "imp√¥t": "Rachid Hakam",
        "taxe": "Rachid Hakam",
        "comptabilit√©": "Rachid Hakam",
        "audit": "Tarik Ghoulam",
        "contr√¥le": "Tarik Ghoulam",
        "inspection": "Wafae Bennis",
        "√©valuation": "Wafae Bennis",
        "qualit√©": "Wafae Bennis",
        "certification": "Wafae Bennis",
        "norme": "Wafae Bennis",
        "s√©curit√©": "Yasmine Maachou",
        "s√ªret√©": "Yasmine Maachou",
        "protection": "Yasmine Maachou",
        "d√©fense": "Soufiane Rahali",
        "arm√©e": "Soufiane Rahali",
        "militaire": "Soufiane Rahali",
        "gendarmerie": "Sa√Ød Kabbouri",
        "police": "Yasmine Maachou",
        "s√©curit√© civile": "Yasmine Maachou",
        "protection civile": "Yasmine Maachou",
        "urgence": "Yasmine Maachou",
        "sant√©": "Leila El Mansouri",
        "m√©dical": "Leila El Mansouri",
        "h√¥pital": "Leila El Mansouri",
        "clinique": "Leila El Mansouri",
        "pharmacie": "Nabil Khattabi",
        "m√©dicament": "Nabil Khattabi",
        "laboratoire": "Leila El Mansouri",
        "analyse": "Leila El Mansouri",
        "diagnostic": "Leila El Mansouri",
        "radiologie": "Leila El Mansouri",
        "imagerie": "Leila El Mansouri",
        "chirurgie": "Leila El Mansouri",
        "m√©decine": "Leila El Mansouri",
        "param√©dical": "Leila El Mansouri",
        "infirmier": "Leila El Mansouri",
        "√©ducation": "Ali Fadili",
        "formatiown": "Ali Fadili",
        "enseignement": "Ali Fadili",
        "√©cole": "Salma Daoudi",
        "universit√©": "Nadia Tazi",
        "recherche": "Nadia Tazi",
        "science": "Nadia Tazi",
        "innovation": "Nadia Tazi"
 }
# Fonction d'affectation
def map_commercial_from_organisme(organisme):
    org = organisme.lower()
    for keyword, commercial in organisme_to_commercial.items():
        if keyword in org:
            return commercial
    return "Commercial inconnu"

# Pr√©dictions
inputs = tokenizer(texts_to_classify, padding=True, truncation=True, return_tensors="pt", max_length=128)
inputs = {k: v.to(device) for k, v in inputs.items()}

with torch.no_grad():
    outputs = model(**inputs)
    logits = outputs.logits
    probs = softmax(logits, dim=1)
    confidences, predicted_ids = torch.max(probs, dim=1)
    predictions = predicted_ids.cpu().numpy()
    confidences = confidences.cpu().numpy()

# R√©sultats finaux
results = []
inconnus = []

print("\n R√©sultats de classification des AO avec commerciaux :\n")
for text, orga, pred_id, conf in zip(texts_to_classify, organismes, predictions, confidences):
    label_pred = id2label[pred_id]
    if conf < confidence_threshold or label_pred == "non pertinent":
        final_label = "non pertinent"
    else:
        final_label = label_pred
    commercial = map_commercial_from_organisme(orga)

    print(f"- {orga} => BU : {final_label}, Commercial : {commercial} ({conf*100:.2f}%)")
    results.append({
        "Objet": text,
        "Organisme": orga,
        "BU pr√©dite": final_label,
        "Confiance (%)": round(conf * 100, 2),
        "Commercial associ√©": commercial
    })

    if commercial == "Commercial inconnu":
        inconnus.append({
            "Organisme": orga,
            "Objet": text
        })

# Sauvegarde des r√©sultats
df_results = pd.DataFrame(results)
df_results.to_excel("resultats_classification_aoCOmm11.xlsx", index=False)



print("\n‚úÖ Fichiers enregistr√©s :")
print("- resultats_classification_aoCOmm1.xlsx")